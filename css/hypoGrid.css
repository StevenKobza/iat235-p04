/* 
    This file draws from "Don't Overthink Grids" available at http://css-tricks.com/dont-overthink-it-grids/
    It also draws heavily from the tutorial in IAT 235's Week 7 or 8 (I can't remember) lecture.
*/

/*Border Box Model*/
*, *::before, *::after {
    box-sizing: border-box;
}



.box {

    /*Backwards Compatibility*/
    display: flex;
    display: -ms-flex;
    display: -webkit-flex;

    /*Allowing for wrappable components*/
    -ms-flex-wrap: wrap;
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
    
    -webkit-justify-content: space-around;
    -ms-justify-content: space-around;
    justify-content: space-around;
}

.box-item-nav {
    text-align: center;
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
}

.boxItemCol2 {
    flex: 1 1 50%;
}

#navBar {
    display: grid;
    grid-template-columns: repeat(5, 1fr); /*Just means that there will be 5 equally spaced out columns or rows depending on the name of the grid-template*/
    grid-gap: 5%;
    grid-template-rows: repeat(12, 1em);
}

.navOne {
    grid-column: 1/6; /*Starting at column 1 and going to column 5*/
    grid-row: 1/2;
}

.navTwo {
    grid-column: 5/6;
    grid-row: 1/5;
}

.twoByGrid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 5%;
}

.gridOne {
    margin-left: auto;
    margin-right: auto;
    grid-column: 1;
}
.gridTwo {
    margin-left: auto;
    margin-right: auto;
    grid-column: 2/span 1; /*This span means how many columns will it span*/
}

.checkGrid {
    display: grid;
    grid-template: repeat(6, 1fr) / repeat(6, 1fr); /*This means that there will be 6 rows each 1fr (same spaced) apart and 6 columns each 1fr apart*/
    grid-gap: 5px; /*The gap between each row and column besides the 1fr*/
}

/*Starting here you get to see the mess that is the code of my checklist.*/
.checkOne {
    grid-row: 1/1;/*This indicates the startingRow/endingRow*/
    grid-column: 2;/*This indicates the startingColumn*/
}
.checkOneC2 {
    grid-row: 1/1;
    grid-column: 3/5;/*This indicates the startingColumn/endingColumn*/
}
.checkTwo {
    grid-row: 2;
    grid-column: 2;
}
.checkTwoC2 {
    grid-row: 2;
    grid-column: 3/5;
}
.checkThree {
    grid-row: 3;
    grid-column: 2;
}
.checkThreeC2 {
    grid-row: 3;
    grid-column: 3/5;
}
.checkFour {
    grid-row: 4;
    grid-column: 2;
}
.checkFourC2 {
    grid-row: 4;
    grid-column: 3/5;
}
.checkFive {
    grid-row: 5;
    grid-column: 2;
}
.checkFiveC2 {
    grid-row: 5;
    grid-column: 3/5;
}
.checkSix {
    grid-row: 6;
    grid-column: 2;
}
.checkSixC2 {
    grid-row: 6;
    grid-column: 3/5;
}

@media (max-width: 30em) {
    .twoByGrid {
        grid-template-columns: repeat(1, 1fr);
        grid-template-rows: repeat(2, 1fr);
    }
    .gridOne {
        grid-column: 1/2;
        grid-row: 1;
        width: 100%;
    }
    .gridTwo {
        grid-column: 1/2;
        grid-row: 2;
    }
}